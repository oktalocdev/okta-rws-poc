foo = Access any of your food apps from any where you want, all for free
bar = Add bar
buzz = Add a buzz Instead
emptybinary = 01101110011011110111010001101000011010010110111001100111
emptyvalue = 
value.with.apostrophes.and.quotes = The ‘apostrophe’ and 'quote' is converted by “pseudo-loc”
key.with.br = Account successfully unlocked!<br>Verify your account with a security method to continue.
key.with.single.bracket.args = Account successfully unlocked {0} Verify your account with a security method {1} to continue.
key.with.double.bracket.args = Account successfully unlocked {{0}} Verify your account with a security method {{1}} to continue.
key.with.html=Key with <p> html </p>
key.with.non.standard.html=<p class="some class">some text <$1>with<$2></$2></$1> non-standard <$3>html <$4></$4></$3> tag</p>
key.with.dynamic.arguments=Link with <a href="{0}" target="_blank">  dynamic arguments</a>.
key.with.dynamic.argument.multiple=Link with <a href="{0}" target="{1}">  dynamic arguments multiple</a>.
key.with.dynamic.argument.multiple.embedded=Link with <a href="{0}" target="{1}">  dynamic arguments multiple {2} embedded </a>.
key.with.self.closing.tags.arguments=  self {0} closing <br> tags.
key.with.dynamic.arguments.strong.html=Value with strong tag and arguments <strong>{0}</strong>.
key.with.dynamic.arguents.doubledigits=Link with <a href="{10}" target="_blank">  dynamic arguments</a>.
key.with.dynamic.href.html=<p>Html with <a href="{0}" target="_blank"> dynamic link with arguments</a> embedded</p>.
key.with.dynamic.href.html.multiple=<p>Html with <a href="{0}" target="_blank"> <a href="{1}" target="_blank"> dynamic link with arguments</a> embedded</p>.
key.with.hash.in.href=<a href="#tab-signon"> Link to a subtab with hash in anchor </a>
key.with.hash.in.href.middle=<a href="/app/UserHome#tab-signon"> Link to a subtab with hash in anchor </a>
key.with.slash.in.href=<a href="/app/UserHome">Click here</a> to return to your home page.
key.with.non.standard.html.and.arguments=<$1>Some text</$1> <$2>some more</$2> arg1 {0} another arg {1}
